<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【学习】一些概率分布与代码实现</title>
    <link href="/2023/01/28/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <url>/2023/01/28/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://github.com/graykode/distribution-is-all-you-need">https://github.com/graykode/distribution-is-all-you-need</a></p><p>尝试写了一下部分概率分布的代码</p><p><img src="https://github.com/graykode/distribution-is-all-you-need/raw/master/overview.png" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> random<br></code></pre></td></tr></table></figure><h1 id="均匀分布"><a href="#均匀分布" class="headerlink" title="均匀分布"></a>均匀分布</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">uniform</span>(<span class="hljs-params">x,a,b</span>):<br>    <span class="hljs-comment"># y=[]</span><br>    <span class="hljs-comment"># for val in x:</span><br>    <span class="hljs-comment">#     if val&gt;=a and val&lt;=b:</span><br>    <span class="hljs-comment">#         y.append(1/(b-a))</span><br>    <span class="hljs-comment">#     else:</span><br>    <span class="hljs-comment">#         y.append(0)</span><br>    y=[<span class="hljs-number">1</span>/(b-a) <span class="hljs-keyword">if</span> a&lt;=val <span class="hljs-keyword">and</span> val&lt;=b <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">for</span> val <span class="hljs-keyword">in</span> x]<br>    <span class="hljs-keyword">return</span> x,y,np.mean(y),np.std(y)<br>x= np.arange(-<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)<br>a=-<span class="hljs-number">50</span><br>b=<span class="hljs-number">50</span><br>x,y,u,s=uniform(x,a,b)<br>plt.plot(x,y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/image-20230128110448294.png" alt="image-20230128110448294"></p><h1 id="伯努利分布"><a href="#伯努利分布" class="headerlink" title="伯努利分布"></a>伯努利分布</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Bernoulli</span>(<span class="hljs-params">p,k</span>):<br>    <span class="hljs-comment"># if k == 1:</span><br>    <span class="hljs-comment">#     y = p</span><br>    <span class="hljs-comment"># else:</span><br>    <span class="hljs-comment">#     y = 1-p</span><br>    <span class="hljs-comment"># return y</span><br>    <span class="hljs-keyword">return</span> p <span class="hljs-keyword">if</span> k <span class="hljs-keyword">else</span> <span class="hljs-number">1</span>-p<br>n_exp=<span class="hljs-number">100</span><br>x=np.arange(n_exp)<br>p=<span class="hljs-number">0.6</span><br>y=[]<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n_exp):<br>    pick=Bernoulli(p,k=<span class="hljs-built_in">bool</span>(random.getrandbits(<span class="hljs-number">1</span>)))<br>    y.append(pick)<br><span class="hljs-comment"># u,s=np.mean(y),np.std(y)</span><br>plt.scatter(x,y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/image-20230128110526690.png" alt="image-20230128110526690"></p><h1 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">const</span>(<span class="hljs-params">k,n</span>):<br>    <span class="hljs-keyword">return</span> np.math.factorial(n)/(np.math.factorial(k)*np.math.factorial(n-k))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Binomial</span>(<span class="hljs-params">n,p</span>):<br>    y=[const(k,n)*(p**k)*((<span class="hljs-number">1</span>-p)**(n-k)) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n)]<br>    <span class="hljs-keyword">return</span> y<br>n_exp=<span class="hljs-number">40</span><br>p=<span class="hljs-number">0.7</span><br>x=np.arange(n_exp)<br>y=Binomial(n_exp,p)<br><span class="hljs-comment"># y.append(pick)</span><br>plt.scatter(x,y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/image-20230128110542547.png" alt="image-20230128110542547"></p><h1 id="Beta分布"><a href="#Beta分布" class="headerlink" title="Beta分布"></a>Beta分布</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">gamma</span>(<span class="hljs-params">n</span>):<br>    res=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,n):<br>        res*=i<br>    <span class="hljs-keyword">return</span> res<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">beta</span>(<span class="hljs-params">x,a,b</span>):<br>    res=gamma(a+b)/(gamma(a)*gamma(b))<br>    y=res*x**(a-<span class="hljs-number">1</span>)*(<span class="hljs-number">1</span>-x)**(b-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">return</span> y<br>a,b=<span class="hljs-number">1</span>,<span class="hljs-number">3</span><br>x=np.arange(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0.001</span>)<br>y=beta(x,a,b)<br>plt.plot(x,y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/image-20230128110655178.png" alt="image-20230128110655178"></p><h1 id="伽马分布"><a href="#伽马分布" class="headerlink" title="伽马分布"></a>伽马分布</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">gamma</span>(<span class="hljs-params">n</span>):<br>    res = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>, n):<br>        res *= i<br>    <span class="hljs-keyword">return</span> res<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gamma_dis</span>(<span class="hljs-params">x,a,b</span>):<br>    res=<span class="hljs-number">1</span>/gamma(a)<br>    y=res*b**a*x**(a-<span class="hljs-number">1</span>)*np.exp((-b*x))<br>    <span class="hljs-keyword">return</span> y<br><span class="hljs-keyword">for</span> ls <span class="hljs-keyword">in</span> [(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">3</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>),(<span class="hljs-number">4</span>,<span class="hljs-number">1</span>)]:<br>    a,b=ls[<span class="hljs-number">0</span>],ls[<span class="hljs-number">1</span>]<br>    x=np.arange(<span class="hljs-number">0</span>,<span class="hljs-number">20</span>,<span class="hljs-number">0.001</span>)<br>    y=gamma_dis(x,a,b)<br>    plt.plot(x,y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/image-20230128110734794.png" alt="image-20230128110734794"></p><h1 id="指数分布"><a href="#指数分布" class="headerlink" title="指数分布"></a>指数分布</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">exponential</span>(<span class="hljs-params">x,lam</span>):<br>    y=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:<br>        <span class="hljs-keyword">if</span> i&gt;=<span class="hljs-number">0</span>:<br>            y.append(lam*np.exp(-lam*i))<br>        <span class="hljs-keyword">else</span>:<br>            y.append(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">return</span> y<br><span class="hljs-keyword">for</span> lam <span class="hljs-keyword">in</span> [<span class="hljs-number">0.5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1.5</span>]:<br>    x=np.arange(<span class="hljs-number">0</span>,<span class="hljs-number">20</span>,<span class="hljs-number">0.01</span>,dtype=np.float64)<br>    y=exponential(x,lam)<br>    plt.plot(x,y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/image-20230128111040475.png" alt="image-20230128111040475"></p><h1 id="高斯分布"><a href="#高斯分布" class="headerlink" title="高斯分布"></a>高斯分布</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">gaussian</span>(<span class="hljs-params">x</span>):<br>    u=x.mean()<br>    sig=x.std()<br>    res1=<span class="hljs-number">1</span>/(sig*np.math.sqrt(<span class="hljs-number">2</span>*np.pi))<br>    res2=-((x-u)**<span class="hljs-number">2</span>/(<span class="hljs-number">2</span>*sig**<span class="hljs-number">2</span>))<br>    <span class="hljs-keyword">return</span> res1*np.exp(res2)<br>x=np.arange(-<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">0.001</span>)<br>y=gaussian(x)<br>plt.plot(x,y)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E4%B8%80%E4%BA%9B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/image-20230128111153826.png" alt="image-20230128111153826"></p>]]></content>
    
    
    
    <tags>
      
      <tag>概率论 代码实现 python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/2023/01/27/%E6%B5%8B%E8%AF%95/"/>
    <url>/2023/01/27/%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/27/hello-world/"/>
    <url>/2023/01/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
