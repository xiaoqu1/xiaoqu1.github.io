<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【学习】常见距离度量方法</title>
    <link href="/2023/02/08/Common-Distance-Metrics/"/>
    <url>/2023/02/08/Common-Distance-Metrics/</url>
    
    <content type="html"><![CDATA[<p>文章实现了部分常见距离度量方法的代码（在chatgpt帮助下）</p><p>有不足之处请批评指正</p><p>vscode+python+.ipynb+chatgpt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br></code></pre></td></tr></table></figure><h1 id="欧氏距离-Euclidean-Distance-ED"><a href="#欧氏距离-Euclidean-Distance-ED" class="headerlink" title="欧氏距离(Euclidean Distance, ED)"></a>欧氏距离(Euclidean Distance, ED)</h1><p>N维空间点：$d_{a b}=\sqrt{\sum_{k=1}^n\left(x_{1 k}-x_{2 k}\right)^2}$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">euclidean_distance_2d</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> np.math.sqrt((a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])**<span class="hljs-number">2</span>+(a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>])**<span class="hljs-number">2</span>)<span class="hljs-comment">#后边发现如果为np.array，直接a-b就可以了</span><br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br>b=(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br>dis=euclidean_distance_2d(a,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The distance between the two points is&quot;</span>, dis)<br>plt.plot([a[<span class="hljs-number">0</span>], b[<span class="hljs-number">0</span>]], [a[<span class="hljs-number">1</span>], b[<span class="hljs-number">1</span>]], <span class="hljs-string">&#x27;ro-&#x27;</span>)<br>plt.axis([-<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, -<span class="hljs-number">10</span>, <span class="hljs-number">10</span>])<br>plt.show()<br></code></pre></td></tr></table></figure><p>运行结果为</p><blockquote><p>The distance between the two points is 5.0</p></blockquote><p>图片显示为</p><img src="/.com//02/08/Common-Distance-Metrics/image-20230208140342567.png" class title="image-20230208140342567"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">euclidean_distance_3d</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-keyword">return</span> np.math.sqrt((a[<span class="hljs-number">0</span>]-b[<span class="hljs-number">0</span>])**<span class="hljs-number">2</span>+(a[<span class="hljs-number">1</span>]-b[<span class="hljs-number">1</span>])**<span class="hljs-number">2</span>+(a[<span class="hljs-number">2</span>]-b[<span class="hljs-number">2</span>])**<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a=(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>b=(<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Euclidean distance between points&quot;</span>, a, <span class="hljs-string">&quot;and&quot;</span>,b, <span class="hljs-string">&quot;:&quot;</span>, euclidean_distance_3d(a, b))<br></code></pre></td></tr></table></figure><p>运行结果为</p><blockquote><p>Euclidean distance between points (1, 2, 3) and (4, 5, 6) : 5.196152422706632</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">fig = plt.figure()<br>ax = fig.add_subplot(<span class="hljs-number">111</span>, projection=<span class="hljs-string">&#x27;3d&#x27;</span>)<br><br>x = [a[<span class="hljs-number">0</span>], b[<span class="hljs-number">0</span>]]<br>y = [a[<span class="hljs-number">1</span>], b[<span class="hljs-number">1</span>]]<br>z = [a[<span class="hljs-number">2</span>], b[<span class="hljs-number">2</span>]]<br><br>ax.scatter(x, y, z)<br>ax.plot(x, y, z, color=<span class="hljs-string">&#x27;red&#x27;</span>)<br>ax.set_xlabel(<span class="hljs-string">&#x27;X axis&#x27;</span>)<br>ax.set_ylabel(<span class="hljs-string">&#x27;Y axis&#x27;</span>)<br>ax.set_zlabel(<span class="hljs-string">&#x27;Z axis&#x27;</span>)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p>图片显示为</p><img src="/.com//02/08/Common-Distance-Metrics/image-20230208140439598.png" class title="image-20230208140439598"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">euclidean_distance_nd</span>(<span class="hljs-params">a,b</span>):<br>    distance=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>        distance+=(a[i]-b[i])**<span class="hljs-number">2</span><br>    <span class="hljs-keyword">return</span> np.math.sqrt(distance)<br>point1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>point2 = [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Euclidean distance between points: &quot;</span>,<br>      euclidean_distance_nd(point1, point2))<br></code></pre></td></tr></table></figure><p>结果显示为</p><blockquote><p>Euclidean distance between points:  5.196152422706632</p></blockquote><h1 id="曼哈顿距离-Manhattan-Distance-ManD"><a href="#曼哈顿距离-Manhattan-Distance-ManD" class="headerlink" title="曼哈顿距离(Manhattan Distance, ManD)"></a>曼哈顿距离(Manhattan Distance, ManD)</h1><p>N维空间点：$d_{a b}=\sum_{k=1}^n\left|x_{1 k}-x_{2 k}\right|$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Manhattan_distance</span>(<span class="hljs-params">a, b</span>):<br>    dis=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)):<br>        dis+=np.<span class="hljs-built_in">abs</span>(a[i]-b[i])<br>    <span class="hljs-keyword">return</span> dis<br>a = (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>b = (<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>)<br>dis = Manhattan_distance(a, b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The distance between the two points is&quot;</span>, dis)<br></code></pre></td></tr></table></figure><p>显示结果为</p><blockquote><p>The distance between the two points is 12</p></blockquote><h1 id="切比雪夫距离-Chebyshev-Distance-CD"><a href="#切比雪夫距离-Chebyshev-Distance-CD" class="headerlink" title="切比雪夫距离(Chebyshev Distance, CD)"></a>切比雪夫距离(Chebyshev Distance, CD)</h1><p>$d_{a b}=\max <em>n\left(\left|x</em>{1 n}-x_{2 n}\right|\right)$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Chebyshev_distance</span>(<span class="hljs-params">a,b</span>):<br>    a=np.array(a)<br>    b=np.array(b)<br>    <span class="hljs-keyword">return</span> np.<span class="hljs-built_in">max</span>(np.<span class="hljs-built_in">abs</span>(a-b))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<br>b = [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br>dis = Chebyshev_distance(a, b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The distance between the two points is&quot;</span>, dis)<br></code></pre></td></tr></table></figure><p>显示结果为</p><blockquote><p>The distance between the two points is 4</p></blockquote><h1 id="闵可夫斯基距离-Minkowski-Distance-MinD"><a href="#闵可夫斯基距离-Minkowski-Distance-MinD" class="headerlink" title="闵可夫斯基距离(Minkowski Distance, MinD)"></a>闵可夫斯基距离(Minkowski Distance, MinD)</h1><p>$d_{a b}=\sqrt[p]{\sum_{k=1}^n\left|x_{1 k}-x_{2 k}\right|^p}$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Minkowski_distance</span>(<span class="hljs-params">a,b,p=<span class="hljs-number">2</span></span>):<br>    a=np.array(a)<br>    b=np.array(b)<br>    <span class="hljs-keyword">return</span> np.<span class="hljs-built_in">sum</span>(np.<span class="hljs-built_in">abs</span>(a - b) ** p) ** (<span class="hljs-number">1</span> / p)<br>x1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>x2 = [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Minkowski Distance with p=1 (Euclidean Distance):&quot;</span>,<br>      Minkowski_distance(x1, x2, <span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Minkowski Distance with p=2 (Manhattan Distance):&quot;</span>,<br>      Minkowski_distance(x1, x2, <span class="hljs-number">2</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Minkowski Distance with p=inf (Chebyshev Distance):&quot;</span>,<br>      Minkowski_distance(x1, x2, np.Infinity))<span class="hljs-comment">#???</span><br></code></pre></td></tr></table></figure><p>显示结果为：</p><blockquote><p>Minkowski Distance with p=1 (Euclidean Distance): 9.0 </p><p>Minkowski Distance with p=2 (Manhattan Distance): 5.196152422706632 </p><p>Minkowski Distance with p=inf (Chebyshev Distance): 1.0</p></blockquote><p>Minkowski Distance with p=inf (Chebyshev Distance): 1.0存在疑惑</p><h1 id="标准化欧氏距离-Standardized-Euclidean-Distance-SED"><a href="#标准化欧氏距离-Standardized-Euclidean-Distance-SED" class="headerlink" title="标准化欧氏距离(Standardized Euclidean Distance, SED)"></a>标准化欧氏距离(Standardized Euclidean Distance, SED)</h1><p>$d_{a b}=\sqrt{\sum_{k=1}^n\left(\frac{x_{1 k}-x_{2 k}}{s_k}\right)^2}$</p><p>在代码中先进行了标准化，再求的距离</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Standardized_Euclidean_distance</span>(<span class="hljs-params">a,b</span>):<br>    a=np.array(a)<br>    b=np.array(b)<br>    a=(a-np.mean(a))/np.std(a)<br>    b=(b-np.mean(b))/np.std(b)<br>    <span class="hljs-keyword">return</span> np.sqrt(np.<span class="hljs-built_in">sum</span>((a-b)**<span class="hljs-number">2</span>))<br>a = [<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>]<br>b = [<span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">9.0</span>]<br>distance = Standardized_Euclidean_distance(a, b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Distance:&quot;</span>, distance)<br></code></pre></td></tr></table></figure><p>显示结果为：</p><blockquote><p>Distance: 0.6731710704929097</p></blockquote><h1 id="马氏距离-Mahalanobis-Distance-MahD"><a href="#马氏距离-Mahalanobis-Distance-MahD" class="headerlink" title="马氏距离(Mahalanobis Distance, MahD)"></a>马氏距离(Mahalanobis Distance, MahD)</h1><p>参考文章：<a href="https://cloud.tencent.com/developer/article/1406436">https://cloud.tencent.com/developer/article/1406436</a><br>$d_{\text {MahD }}\left(x_i, x_j\right)=\sqrt{\left(x_i-x_j\right)^T S^{-1}\left(x_i-x_j\right)}$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Mahalanobis_distance</span>(<span class="hljs-params">X</span>):<br>    XT=X.T<br>    S=np.cov(X)<span class="hljs-comment">#协方差矩阵</span><br>    SI=np.linalg.inv(S)<span class="hljs-comment">#逆矩阵</span><br>    n=XT.shape[<span class="hljs-number">0</span>]<br>    d1=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i+<span class="hljs-number">1</span>,n):<br>            delta=XT[i]-XT[j]<br>            d=np.sqrt(np.dot(np.dot(delta,SI),delta.T))<br>            d1.append(d)<br>    <span class="hljs-keyword">return</span> d1<br>x=np.random.random(<span class="hljs-number">10</span>)<br>y = np.random.random(<span class="hljs-number">10</span>)<br>X=np.vstack([x,y])<br>d1=Mahalanobis_distance(X)<br><span class="hljs-built_in">print</span>(d1)<br></code></pre></td></tr></table></figure><p>得到：</p><blockquote><p>[1.746255431544513, 2.6836959244469014, 1.3530630601255353, 2.3256884148164, 0.5901655615068397, 1.6132393990772627, 1.838205472316197, 1.0009951065120177, 0.6106645998595308, 3.220305428906728, 2.2225922749706037, 1.2019262846400813, 2.2526633979267565, 2.861236346858793, 1.0148195238661857, 0.8388089487748589, 2.098798877572374, 1.3306328654359725, 2.5400673938570244, 3.0593862421879034, 1.4222759310758772, 2.3123999314666808, 2.5926515366712057, 3.234938883395239, 2.033262650639084, 1.7582195858038796, 0.7140778653863011, 1.6033623235025258, 1.4440620204373895, 1.9132789666844832, 2.913864634993178, 2.747022646468039, 0.4955904358434304, 1.3727273840234242, 2.8606485652340488, 1.8008072421168257, 2.4278397479930742, 1.5711920546055222, 0.2811006246201531, 2.314871872446079, 2.040839159686488, 2.0319488486339874, 0.9186305412885155, 2.3874830595918044, 1.4922664349027532]</p></blockquote><h1 id="夹角余弦距离-Cosine-Distance-CosD"><a href="#夹角余弦距离-Cosine-Distance-CosD" class="headerlink" title="夹角余弦距离(Cosine Distance, CosD)"></a>夹角余弦距离(Cosine Distance, CosD)</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Cosine_distance</span>(<span class="hljs-params">x,y</span>):<br>    x=np.array(x)<br>    y=np.array(y)<br>    <span class="hljs-keyword">return</span> x.dot(y)/(np.sqrt(x.dot(x))*np.sqrt(y.dot(y)))<br>x = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>y = [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Cosine distance: &quot;</span>, Cosine_distance(x, y))<br></code></pre></td></tr></table></figure><p>结果显示为：</p><blockquote><p>Cosine distance:  0.9925833339709303</p></blockquote><h1 id="杰卡德距离-Jaccard-Distance-JD"><a href="#杰卡德距离-Jaccard-Distance-JD" class="headerlink" title="杰卡德距离(Jaccard Distance, JD)"></a>杰卡德距离(Jaccard Distance, JD)</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Jaccard_distance</span>(<span class="hljs-params">A,B</span>):<br>    A=<span class="hljs-built_in">set</span>(A)<br>    B=<span class="hljs-built_in">set</span>(B)<br>    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">len</span>(A.union(B))-<span class="hljs-built_in">len</span>(A.intersection(B)))/<span class="hljs-built_in">len</span>(A.union(B))<br>a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>b = [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><span class="hljs-built_in">print</span>(Jaccard_distance(a, b))<br><br></code></pre></td></tr></table></figure><p>结果显示为：</p><blockquote><p>0.4</p></blockquote><h1 id="信息熵-Information-Entropy-IE"><a href="#信息熵-Information-Entropy-IE" class="headerlink" title="信息熵(Information Entropy,IE)"></a>信息熵(Information Entropy,IE)</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Information_Entropy</span>(<span class="hljs-params">X</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> X:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    union_classes=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(X))<br>    probs=[X.count(c)/<span class="hljs-built_in">len</span>(X) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> union_classes]<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sum</span>(-p*np.log2(p) <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> probs)<br>X=[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<br><span class="hljs-built_in">print</span>(Information_Entropy(X))<br></code></pre></td></tr></table></figure><p>结果显示为：</p><blockquote><p>1.0</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Python 距离度量方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
